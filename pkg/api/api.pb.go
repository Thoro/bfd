// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SessionState int32

const (
	SessionState_ADMIN_DOWN SessionState = 0
	SessionState_DOWN       SessionState = 1
	SessionState_INIT       SessionState = 2
	SessionState_UP         SessionState = 3
)

var SessionState_name = map[int32]string{
	0: "ADMIN_DOWN",
	1: "DOWN",
	2: "INIT",
	3: "UP",
}

var SessionState_value = map[string]int32{
	"ADMIN_DOWN": 0,
	"DOWN":       1,
	"INIT":       2,
	"UP":         3,
}

func (x SessionState) String() string {
	return proto.EnumName(SessionState_name, int32(x))
}

func (SessionState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{0}
}

type DiagnosticCode int32

const (
	DiagnosticCode_NO_DIAGNOSTIC                  DiagnosticCode = 0
	DiagnosticCode_CONTROL_DETECTION_TIME_EXPIRED DiagnosticCode = 1
	DiagnosticCode_ECHO_FUNCTION_FAILED           DiagnosticCode = 2
	DiagnosticCode_NEIGHBOR_SIGNALED_SESSION_DOWN DiagnosticCode = 3
	DiagnosticCode_FORWARDING_PLANE_RESET         DiagnosticCode = 4
	DiagnosticCode_PATH_DOWN                      DiagnosticCode = 5
	DiagnosticCode_CONCATENATED_PATH_DOWN         DiagnosticCode = 6
	DiagnosticCode_ADMINISTRATIVELY_DOWN          DiagnosticCode = 7
	DiagnosticCode_REVERSE_CONCATENATED_PATH_DOWN DiagnosticCode = 8
)

var DiagnosticCode_name = map[int32]string{
	0: "NO_DIAGNOSTIC",
	1: "CONTROL_DETECTION_TIME_EXPIRED",
	2: "ECHO_FUNCTION_FAILED",
	3: "NEIGHBOR_SIGNALED_SESSION_DOWN",
	4: "FORWARDING_PLANE_RESET",
	5: "PATH_DOWN",
	6: "CONCATENATED_PATH_DOWN",
	7: "ADMINISTRATIVELY_DOWN",
	8: "REVERSE_CONCATENATED_PATH_DOWN",
}

var DiagnosticCode_value = map[string]int32{
	"NO_DIAGNOSTIC":                  0,
	"CONTROL_DETECTION_TIME_EXPIRED": 1,
	"ECHO_FUNCTION_FAILED":           2,
	"NEIGHBOR_SIGNALED_SESSION_DOWN": 3,
	"FORWARDING_PLANE_RESET":         4,
	"PATH_DOWN":                      5,
	"CONCATENATED_PATH_DOWN":         6,
	"ADMINISTRATIVELY_DOWN":          7,
	"REVERSE_CONCATENATED_PATH_DOWN": 8,
}

func (x DiagnosticCode) String() string {
	return proto.EnumName(DiagnosticCode_name, int32(x))
}

func (DiagnosticCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{1}
}

type AuthenticationType int32

const (
	AuthenticationType_NONE                  AuthenticationType = 0
	AuthenticationType_SIMPLE_PASSWORD       AuthenticationType = 1
	AuthenticationType_KEYED_MD5             AuthenticationType = 2
	AuthenticationType_METICULOUS_KEYED_MD5  AuthenticationType = 3
	AuthenticationType_KEYED_SHA1            AuthenticationType = 4
	AuthenticationType_METICULOUS_KEYED_SHA1 AuthenticationType = 5
)

var AuthenticationType_name = map[int32]string{
	0: "NONE",
	1: "SIMPLE_PASSWORD",
	2: "KEYED_MD5",
	3: "METICULOUS_KEYED_MD5",
	4: "KEYED_SHA1",
	5: "METICULOUS_KEYED_SHA1",
}

var AuthenticationType_value = map[string]int32{
	"NONE":                  0,
	"SIMPLE_PASSWORD":       1,
	"KEYED_MD5":             2,
	"METICULOUS_KEYED_MD5":  3,
	"KEYED_SHA1":            4,
	"METICULOUS_KEYED_SHA1": 5,
}

func (x AuthenticationType) String() string {
	return proto.EnumName(AuthenticationType_name, int32(x))
}

func (AuthenticationType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{2}
}

type StartRequest struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Port                 uint32   `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartRequest) Reset()         { *m = StartRequest{} }
func (m *StartRequest) String() string { return proto.CompactTextString(m) }
func (*StartRequest) ProtoMessage()    {}
func (*StartRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{0}
}

func (m *StartRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartRequest.Unmarshal(m, b)
}
func (m *StartRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartRequest.Marshal(b, m, deterministic)
}
func (m *StartRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartRequest.Merge(m, src)
}
func (m *StartRequest) XXX_Size() int {
	return xxx_messageInfo_StartRequest.Size(m)
}
func (m *StartRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StartRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StartRequest proto.InternalMessageInfo

func (m *StartRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *StartRequest) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

type StopRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopRequest) Reset()         { *m = StopRequest{} }
func (m *StopRequest) String() string { return proto.CompactTextString(m) }
func (*StopRequest) ProtoMessage()    {}
func (*StopRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{1}
}

func (m *StopRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopRequest.Unmarshal(m, b)
}
func (m *StopRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopRequest.Marshal(b, m, deterministic)
}
func (m *StopRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopRequest.Merge(m, src)
}
func (m *StopRequest) XXX_Size() int {
	return xxx_messageInfo_StopRequest.Size(m)
}
func (m *StopRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StopRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StopRequest proto.InternalMessageInfo

type AddPeerRequest struct {
	Peer                 *Peer    `protobuf:"bytes,1,opt,name=peer,proto3" json:"peer,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddPeerRequest) Reset()         { *m = AddPeerRequest{} }
func (m *AddPeerRequest) String() string { return proto.CompactTextString(m) }
func (*AddPeerRequest) ProtoMessage()    {}
func (*AddPeerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{2}
}

func (m *AddPeerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddPeerRequest.Unmarshal(m, b)
}
func (m *AddPeerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddPeerRequest.Marshal(b, m, deterministic)
}
func (m *AddPeerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddPeerRequest.Merge(m, src)
}
func (m *AddPeerRequest) XXX_Size() int {
	return xxx_messageInfo_AddPeerRequest.Size(m)
}
func (m *AddPeerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddPeerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddPeerRequest proto.InternalMessageInfo

func (m *AddPeerRequest) GetPeer() *Peer {
	if m != nil {
		return m.Peer
	}
	return nil
}

type AddPeerResponse struct {
	Uuid                 []byte   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddPeerResponse) Reset()         { *m = AddPeerResponse{} }
func (m *AddPeerResponse) String() string { return proto.CompactTextString(m) }
func (*AddPeerResponse) ProtoMessage()    {}
func (*AddPeerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{3}
}

func (m *AddPeerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddPeerResponse.Unmarshal(m, b)
}
func (m *AddPeerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddPeerResponse.Marshal(b, m, deterministic)
}
func (m *AddPeerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddPeerResponse.Merge(m, src)
}
func (m *AddPeerResponse) XXX_Size() int {
	return xxx_messageInfo_AddPeerResponse.Size(m)
}
func (m *AddPeerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddPeerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddPeerResponse proto.InternalMessageInfo

func (m *AddPeerResponse) GetUuid() []byte {
	if m != nil {
		return m.Uuid
	}
	return nil
}

type UpdatePeerRequest struct {
	Uuid                 []byte   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Peer                 *Peer    `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdatePeerRequest) Reset()         { *m = UpdatePeerRequest{} }
func (m *UpdatePeerRequest) String() string { return proto.CompactTextString(m) }
func (*UpdatePeerRequest) ProtoMessage()    {}
func (*UpdatePeerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{4}
}

func (m *UpdatePeerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdatePeerRequest.Unmarshal(m, b)
}
func (m *UpdatePeerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdatePeerRequest.Marshal(b, m, deterministic)
}
func (m *UpdatePeerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdatePeerRequest.Merge(m, src)
}
func (m *UpdatePeerRequest) XXX_Size() int {
	return xxx_messageInfo_UpdatePeerRequest.Size(m)
}
func (m *UpdatePeerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdatePeerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdatePeerRequest proto.InternalMessageInfo

func (m *UpdatePeerRequest) GetUuid() []byte {
	if m != nil {
		return m.Uuid
	}
	return nil
}

func (m *UpdatePeerRequest) GetPeer() *Peer {
	if m != nil {
		return m.Peer
	}
	return nil
}

type DeletePeerRequest struct {
	Uuid                 []byte   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeletePeerRequest) Reset()         { *m = DeletePeerRequest{} }
func (m *DeletePeerRequest) String() string { return proto.CompactTextString(m) }
func (*DeletePeerRequest) ProtoMessage()    {}
func (*DeletePeerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{5}
}

func (m *DeletePeerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeletePeerRequest.Unmarshal(m, b)
}
func (m *DeletePeerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeletePeerRequest.Marshal(b, m, deterministic)
}
func (m *DeletePeerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeletePeerRequest.Merge(m, src)
}
func (m *DeletePeerRequest) XXX_Size() int {
	return xxx_messageInfo_DeletePeerRequest.Size(m)
}
func (m *DeletePeerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeletePeerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeletePeerRequest proto.InternalMessageInfo

func (m *DeletePeerRequest) GetUuid() []byte {
	if m != nil {
		return m.Uuid
	}
	return nil
}

type ListPeerRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListPeerRequest) Reset()         { *m = ListPeerRequest{} }
func (m *ListPeerRequest) String() string { return proto.CompactTextString(m) }
func (*ListPeerRequest) ProtoMessage()    {}
func (*ListPeerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{6}
}

func (m *ListPeerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPeerRequest.Unmarshal(m, b)
}
func (m *ListPeerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPeerRequest.Marshal(b, m, deterministic)
}
func (m *ListPeerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPeerRequest.Merge(m, src)
}
func (m *ListPeerRequest) XXX_Size() int {
	return xxx_messageInfo_ListPeerRequest.Size(m)
}
func (m *ListPeerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPeerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListPeerRequest proto.InternalMessageInfo

type ListPeerResponse struct {
	Uuid                 []byte   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Peer                 *Peer    `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListPeerResponse) Reset()         { *m = ListPeerResponse{} }
func (m *ListPeerResponse) String() string { return proto.CompactTextString(m) }
func (*ListPeerResponse) ProtoMessage()    {}
func (*ListPeerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{7}
}

func (m *ListPeerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPeerResponse.Unmarshal(m, b)
}
func (m *ListPeerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPeerResponse.Marshal(b, m, deterministic)
}
func (m *ListPeerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPeerResponse.Merge(m, src)
}
func (m *ListPeerResponse) XXX_Size() int {
	return xxx_messageInfo_ListPeerResponse.Size(m)
}
func (m *ListPeerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPeerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListPeerResponse proto.InternalMessageInfo

func (m *ListPeerResponse) GetUuid() []byte {
	if m != nil {
		return m.Uuid
	}
	return nil
}

func (m *ListPeerResponse) GetPeer() *Peer {
	if m != nil {
		return m.Peer
	}
	return nil
}

type GetPeerStateRequest struct {
	Uuid                 []byte   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPeerStateRequest) Reset()         { *m = GetPeerStateRequest{} }
func (m *GetPeerStateRequest) String() string { return proto.CompactTextString(m) }
func (*GetPeerStateRequest) ProtoMessage()    {}
func (*GetPeerStateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{8}
}

func (m *GetPeerStateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPeerStateRequest.Unmarshal(m, b)
}
func (m *GetPeerStateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPeerStateRequest.Marshal(b, m, deterministic)
}
func (m *GetPeerStateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPeerStateRequest.Merge(m, src)
}
func (m *GetPeerStateRequest) XXX_Size() int {
	return xxx_messageInfo_GetPeerStateRequest.Size(m)
}
func (m *GetPeerStateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPeerStateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPeerStateRequest proto.InternalMessageInfo

func (m *GetPeerStateRequest) GetUuid() []byte {
	if m != nil {
		return m.Uuid
	}
	return nil
}

type MonitorPeerRequest struct {
	Uuid                 []byte   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MonitorPeerRequest) Reset()         { *m = MonitorPeerRequest{} }
func (m *MonitorPeerRequest) String() string { return proto.CompactTextString(m) }
func (*MonitorPeerRequest) ProtoMessage()    {}
func (*MonitorPeerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{9}
}

func (m *MonitorPeerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MonitorPeerRequest.Unmarshal(m, b)
}
func (m *MonitorPeerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MonitorPeerRequest.Marshal(b, m, deterministic)
}
func (m *MonitorPeerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MonitorPeerRequest.Merge(m, src)
}
func (m *MonitorPeerRequest) XXX_Size() int {
	return xxx_messageInfo_MonitorPeerRequest.Size(m)
}
func (m *MonitorPeerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MonitorPeerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MonitorPeerRequest proto.InternalMessageInfo

func (m *MonitorPeerRequest) GetUuid() []byte {
	if m != nil {
		return m.Uuid
	}
	return nil
}

type PeerStateResponse struct {
	Local                *PeerState `protobuf:"bytes,1,opt,name=local,proto3" json:"local,omitempty"`
	Remote               *PeerState `protobuf:"bytes,2,opt,name=remote,proto3" json:"remote,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *PeerStateResponse) Reset()         { *m = PeerStateResponse{} }
func (m *PeerStateResponse) String() string { return proto.CompactTextString(m) }
func (*PeerStateResponse) ProtoMessage()    {}
func (*PeerStateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{10}
}

func (m *PeerStateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeerStateResponse.Unmarshal(m, b)
}
func (m *PeerStateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeerStateResponse.Marshal(b, m, deterministic)
}
func (m *PeerStateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeerStateResponse.Merge(m, src)
}
func (m *PeerStateResponse) XXX_Size() int {
	return xxx_messageInfo_PeerStateResponse.Size(m)
}
func (m *PeerStateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PeerStateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PeerStateResponse proto.InternalMessageInfo

func (m *PeerStateResponse) GetLocal() *PeerState {
	if m != nil {
		return m.Local
	}
	return nil
}

func (m *PeerStateResponse) GetRemote() *PeerState {
	if m != nil {
		return m.Remote
	}
	return nil
}

type DisablePeerRequest struct {
	Uuid                 []byte   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DisablePeerRequest) Reset()         { *m = DisablePeerRequest{} }
func (m *DisablePeerRequest) String() string { return proto.CompactTextString(m) }
func (*DisablePeerRequest) ProtoMessage()    {}
func (*DisablePeerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{11}
}

func (m *DisablePeerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisablePeerRequest.Unmarshal(m, b)
}
func (m *DisablePeerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisablePeerRequest.Marshal(b, m, deterministic)
}
func (m *DisablePeerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisablePeerRequest.Merge(m, src)
}
func (m *DisablePeerRequest) XXX_Size() int {
	return xxx_messageInfo_DisablePeerRequest.Size(m)
}
func (m *DisablePeerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DisablePeerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DisablePeerRequest proto.InternalMessageInfo

func (m *DisablePeerRequest) GetUuid() []byte {
	if m != nil {
		return m.Uuid
	}
	return nil
}

type EnablePeerRequest struct {
	Uuid                 []byte   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EnablePeerRequest) Reset()         { *m = EnablePeerRequest{} }
func (m *EnablePeerRequest) String() string { return proto.CompactTextString(m) }
func (*EnablePeerRequest) ProtoMessage()    {}
func (*EnablePeerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{12}
}

func (m *EnablePeerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnablePeerRequest.Unmarshal(m, b)
}
func (m *EnablePeerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnablePeerRequest.Marshal(b, m, deterministic)
}
func (m *EnablePeerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnablePeerRequest.Merge(m, src)
}
func (m *EnablePeerRequest) XXX_Size() int {
	return xxx_messageInfo_EnablePeerRequest.Size(m)
}
func (m *EnablePeerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EnablePeerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EnablePeerRequest proto.InternalMessageInfo

func (m *EnablePeerRequest) GetUuid() []byte {
	if m != nil {
		return m.Uuid
	}
	return nil
}

type Peer struct {
	Name                  string          `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Address               string          `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	DesiredMinTxInterval  uint32          `protobuf:"varint,3,opt,name=desired_min_tx_interval,json=desiredMinTxInterval,proto3" json:"desired_min_tx_interval,omitempty"`
	RequiredMinRxInterval uint32          `protobuf:"varint,4,opt,name=required_min_rx_interval,json=requiredMinRxInterval,proto3" json:"required_min_rx_interval,omitempty"`
	DetectMultiplier      uint32          `protobuf:"varint,5,opt,name=detect_multiplier,json=detectMultiplier,proto3" json:"detect_multiplier,omitempty"`
	IsMultiHop            bool            `protobuf:"varint,6,opt,name=is_multi_hop,json=isMultiHop,proto3" json:"is_multi_hop,omitempty"`
	Authentication        *Authentication `protobuf:"bytes,7,opt,name=authentication,proto3" json:"authentication,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}        `json:"-"`
	XXX_unrecognized      []byte          `json:"-"`
	XXX_sizecache         int32           `json:"-"`
}

func (m *Peer) Reset()         { *m = Peer{} }
func (m *Peer) String() string { return proto.CompactTextString(m) }
func (*Peer) ProtoMessage()    {}
func (*Peer) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{13}
}

func (m *Peer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Peer.Unmarshal(m, b)
}
func (m *Peer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Peer.Marshal(b, m, deterministic)
}
func (m *Peer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Peer.Merge(m, src)
}
func (m *Peer) XXX_Size() int {
	return xxx_messageInfo_Peer.Size(m)
}
func (m *Peer) XXX_DiscardUnknown() {
	xxx_messageInfo_Peer.DiscardUnknown(m)
}

var xxx_messageInfo_Peer proto.InternalMessageInfo

func (m *Peer) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Peer) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Peer) GetDesiredMinTxInterval() uint32 {
	if m != nil {
		return m.DesiredMinTxInterval
	}
	return 0
}

func (m *Peer) GetRequiredMinRxInterval() uint32 {
	if m != nil {
		return m.RequiredMinRxInterval
	}
	return 0
}

func (m *Peer) GetDetectMultiplier() uint32 {
	if m != nil {
		return m.DetectMultiplier
	}
	return 0
}

func (m *Peer) GetIsMultiHop() bool {
	if m != nil {
		return m.IsMultiHop
	}
	return false
}

func (m *Peer) GetAuthentication() *Authentication {
	if m != nil {
		return m.Authentication
	}
	return nil
}

//
//Password can either start with
//0x.... -> then it's hex
//or be a string
//
//SimplePassword = 16 bytes
//MD5 = 16 bytes
//SHA1 = 20 bytes
type Authentication struct {
	Type                 AuthenticationType `protobuf:"varint,1,opt,name=type,proto3,enum=api.AuthenticationType" json:"type,omitempty"`
	Password             string             `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Authentication) Reset()         { *m = Authentication{} }
func (m *Authentication) String() string { return proto.CompactTextString(m) }
func (*Authentication) ProtoMessage()    {}
func (*Authentication) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{14}
}

func (m *Authentication) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Authentication.Unmarshal(m, b)
}
func (m *Authentication) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Authentication.Marshal(b, m, deterministic)
}
func (m *Authentication) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Authentication.Merge(m, src)
}
func (m *Authentication) XXX_Size() int {
	return xxx_messageInfo_Authentication.Size(m)
}
func (m *Authentication) XXX_DiscardUnknown() {
	xxx_messageInfo_Authentication.DiscardUnknown(m)
}

var xxx_messageInfo_Authentication proto.InternalMessageInfo

func (m *Authentication) GetType() AuthenticationType {
	if m != nil {
		return m.Type
	}
	return AuthenticationType_NONE
}

func (m *Authentication) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type PeerState struct {
	State                SessionState   `protobuf:"varint,1,opt,name=state,proto3,enum=api.SessionState" json:"state,omitempty"`
	Diagnostic           DiagnosticCode `protobuf:"varint,2,opt,name=diagnostic,proto3,enum=api.DiagnosticCode" json:"diagnostic,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *PeerState) Reset()         { *m = PeerState{} }
func (m *PeerState) String() string { return proto.CompactTextString(m) }
func (*PeerState) ProtoMessage()    {}
func (*PeerState) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{15}
}

func (m *PeerState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeerState.Unmarshal(m, b)
}
func (m *PeerState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeerState.Marshal(b, m, deterministic)
}
func (m *PeerState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeerState.Merge(m, src)
}
func (m *PeerState) XXX_Size() int {
	return xxx_messageInfo_PeerState.Size(m)
}
func (m *PeerState) XXX_DiscardUnknown() {
	xxx_messageInfo_PeerState.DiscardUnknown(m)
}

var xxx_messageInfo_PeerState proto.InternalMessageInfo

func (m *PeerState) GetState() SessionState {
	if m != nil {
		return m.State
	}
	return SessionState_ADMIN_DOWN
}

func (m *PeerState) GetDiagnostic() DiagnosticCode {
	if m != nil {
		return m.Diagnostic
	}
	return DiagnosticCode_NO_DIAGNOSTIC
}

func init() {
	proto.RegisterEnum("api.SessionState", SessionState_name, SessionState_value)
	proto.RegisterEnum("api.DiagnosticCode", DiagnosticCode_name, DiagnosticCode_value)
	proto.RegisterEnum("api.AuthenticationType", AuthenticationType_name, AuthenticationType_value)
	proto.RegisterType((*StartRequest)(nil), "api.StartRequest")
	proto.RegisterType((*StopRequest)(nil), "api.StopRequest")
	proto.RegisterType((*AddPeerRequest)(nil), "api.AddPeerRequest")
	proto.RegisterType((*AddPeerResponse)(nil), "api.AddPeerResponse")
	proto.RegisterType((*UpdatePeerRequest)(nil), "api.UpdatePeerRequest")
	proto.RegisterType((*DeletePeerRequest)(nil), "api.DeletePeerRequest")
	proto.RegisterType((*ListPeerRequest)(nil), "api.ListPeerRequest")
	proto.RegisterType((*ListPeerResponse)(nil), "api.ListPeerResponse")
	proto.RegisterType((*GetPeerStateRequest)(nil), "api.GetPeerStateRequest")
	proto.RegisterType((*MonitorPeerRequest)(nil), "api.MonitorPeerRequest")
	proto.RegisterType((*PeerStateResponse)(nil), "api.PeerStateResponse")
	proto.RegisterType((*DisablePeerRequest)(nil), "api.DisablePeerRequest")
	proto.RegisterType((*EnablePeerRequest)(nil), "api.EnablePeerRequest")
	proto.RegisterType((*Peer)(nil), "api.Peer")
	proto.RegisterType((*Authentication)(nil), "api.Authentication")
	proto.RegisterType((*PeerState)(nil), "api.PeerState")
}

func init() { proto.RegisterFile("api.proto", fileDescriptor_00212fb1f9d3bf1c) }

var fileDescriptor_00212fb1f9d3bf1c = []byte{
	// 993 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x55, 0xef, 0x4e, 0xe3, 0xc6,
	0x17, 0x25, 0xc1, 0x09, 0xe4, 0x02, 0xc1, 0x19, 0xfe, 0xac, 0x7f, 0xf9, 0xa9, 0x15, 0xb2, 0xda,
	0x42, 0x59, 0x09, 0x28, 0xdb, 0x55, 0xd5, 0x16, 0x55, 0xeb, 0x8d, 0x07, 0xb0, 0x9a, 0xd8, 0x91,
	0x6d, 0x96, 0xf2, 0x69, 0x64, 0xf0, 0x2c, 0x3b, 0x52, 0xb0, 0xbd, 0xf6, 0xa4, 0x5d, 0x9e, 0xa0,
	0x1f, 0xfa, 0x32, 0x7d, 0xa1, 0xbe, 0x4b, 0xe5, 0xf1, 0x24, 0x71, 0x12, 0xb2, 0xf4, 0xdb, 0xcc,
	0x3d, 0xe7, 0xdc, 0x39, 0x73, 0x33, 0xf1, 0x81, 0x46, 0x90, 0xb0, 0xa3, 0x24, 0x8d, 0x79, 0x8c,
	0x96, 0x83, 0x84, 0xb5, 0xff, 0x7f, 0x1f, 0xc7, 0xf7, 0x03, 0x7a, 0x2c, 0x4a, 0xb7, 0xc3, 0xf7,
	0xc7, 0xf4, 0x21, 0xe1, 0x8f, 0x05, 0x43, 0x3f, 0x83, 0x75, 0x8f, 0x07, 0x29, 0x77, 0xe9, 0xc7,
	0x21, 0xcd, 0x38, 0xd2, 0x60, 0x25, 0x08, 0xc3, 0x94, 0x66, 0x99, 0x56, 0xd9, 0xab, 0x1c, 0x34,
	0xdc, 0xd1, 0x16, 0x21, 0x50, 0x92, 0x38, 0xe5, 0x5a, 0x75, 0xaf, 0x72, 0xb0, 0xe1, 0x8a, 0xb5,
	0xbe, 0x01, 0x6b, 0x1e, 0x8f, 0x13, 0x29, 0xd6, 0x8f, 0xa1, 0x69, 0x84, 0x61, 0x9f, 0xd2, 0x74,
	0xd4, 0xee, 0x0b, 0x50, 0x12, 0x4a, 0x53, 0xd1, 0x6b, 0xed, 0xb4, 0x71, 0x94, 0x5b, 0x13, 0xb8,
	0x28, 0xeb, 0x5f, 0xc3, 0xe6, 0x58, 0x90, 0x25, 0x71, 0x94, 0xd1, 0xfc, 0x98, 0xe1, 0x90, 0x85,
	0x42, 0xb1, 0xee, 0x8a, 0xb5, 0x7e, 0x0e, 0xad, 0xab, 0x24, 0x0c, 0x38, 0x2d, 0xb7, 0x7e, 0x82,
	0x38, 0x3e, 0xae, 0xfa, 0xf4, 0x71, 0xfb, 0xd0, 0x32, 0xe9, 0x80, 0x3e, 0xdb, 0x47, 0x6f, 0xc1,
	0x66, 0x97, 0x65, 0xbc, 0x44, 0xd3, 0x31, 0xa8, 0x93, 0xd2, 0x62, 0xaf, 0xcf, 0x59, 0xf8, 0x16,
	0xb6, 0x2e, 0xa8, 0xe8, 0xe2, 0xf1, 0x80, 0xd3, 0xcf, 0x99, 0x38, 0x00, 0xd4, 0x8b, 0x23, 0xc6,
	0xe3, 0xf4, 0x39, 0xbb, 0x01, 0xb4, 0x4a, 0x1d, 0xa5, 0xb9, 0xaf, 0xa0, 0x36, 0x88, 0xef, 0x82,
	0x81, 0x9c, 0x7d, 0x73, 0xec, 0xa4, 0xa0, 0x15, 0x20, 0xfa, 0x06, 0xea, 0x29, 0x7d, 0x88, 0x39,
	0x95, 0x86, 0x67, 0x69, 0x12, 0xcd, 0xcd, 0x98, 0x2c, 0x0b, 0x6e, 0x07, 0xcf, 0xce, 0x6e, 0x1f,
	0x5a, 0x38, 0xfa, 0x2f, 0xc4, 0xbf, 0xab, 0xa0, 0xe4, 0x9c, 0x1c, 0x8c, 0x82, 0x07, 0x2a, 0x1f,
	0x9c, 0x58, 0x97, 0xdf, 0x61, 0x75, 0xfa, 0x1d, 0xbe, 0x86, 0x17, 0x21, 0xcd, 0x58, 0x4a, 0x43,
	0xf2, 0xc0, 0x22, 0xc2, 0x3f, 0x11, 0x16, 0x71, 0x9a, 0xfe, 0x1e, 0x0c, 0xb4, 0x65, 0xf1, 0x34,
	0xb7, 0x25, 0xdc, 0x63, 0x91, 0xff, 0xc9, 0x92, 0x18, 0xfa, 0x01, 0xb4, 0x94, 0x7e, 0x1c, 0x8e,
	0x75, 0x69, 0x49, 0xa7, 0x08, 0xdd, 0xce, 0x08, 0xef, 0xb1, 0xc8, 0x9d, 0x08, 0x5f, 0x42, 0x2b,
	0xa4, 0x9c, 0xde, 0x71, 0xf2, 0x30, 0x1c, 0x70, 0x96, 0x0c, 0x18, 0x4d, 0xb5, 0x9a, 0x50, 0xa8,
	0x05, 0xd0, 0x1b, 0xd7, 0xd1, 0x1e, 0xac, 0xb3, 0xac, 0x20, 0x92, 0x0f, 0x71, 0xa2, 0xd5, 0xf7,
	0x2a, 0x07, 0xab, 0x2e, 0xb0, 0x4c, 0x70, 0x2e, 0xe3, 0x04, 0xfd, 0x0c, 0xcd, 0x60, 0xc8, 0x3f,
	0xd0, 0x88, 0xb3, 0xbb, 0x80, 0xb3, 0x38, 0xd2, 0x56, 0xc4, 0xe0, 0xb7, 0xc4, 0xe0, 0x8d, 0x29,
	0xc8, 0x9d, 0xa1, 0xea, 0x37, 0xd0, 0x9c, 0x66, 0xa0, 0x97, 0xa0, 0xf0, 0xc7, 0xa4, 0x98, 0x5d,
	0xf3, 0xf4, 0xc5, 0x13, 0x4d, 0xfc, 0xc7, 0x84, 0xba, 0x82, 0x84, 0xda, 0xb0, 0x9a, 0x04, 0x59,
	0xf6, 0x47, 0x9c, 0x86, 0x72, 0xaa, 0xe3, 0xbd, 0xce, 0xa0, 0x31, 0xfe, 0xd5, 0xd1, 0x3e, 0xd4,
	0xb2, 0x7c, 0x21, 0xdb, 0xb6, 0x44, 0x5b, 0x8f, 0x66, 0x19, 0x8b, 0x23, 0xf9, 0x7c, 0x04, 0x8e,
	0x5e, 0x01, 0x84, 0x2c, 0xb8, 0x8f, 0xe2, 0x8c, 0xb3, 0x3b, 0xd1, 0xb3, 0x29, 0x6f, 0x62, 0x8e,
	0xcb, 0x9d, 0x38, 0xa4, 0x6e, 0x89, 0x76, 0xf8, 0x13, 0xac, 0x97, 0x7b, 0xa1, 0x26, 0x80, 0x61,
	0xf6, 0x2c, 0x9b, 0x98, 0xce, 0xb5, 0xad, 0x2e, 0xa1, 0x55, 0x50, 0xc4, 0xaa, 0x92, 0xaf, 0x2c,
	0xdb, 0xf2, 0xd5, 0x2a, 0xaa, 0x43, 0xf5, 0xaa, 0xaf, 0x2e, 0x1f, 0xfe, 0x55, 0x85, 0xe6, 0x74,
	0x6b, 0xd4, 0x82, 0x0d, 0xdb, 0x21, 0xa6, 0x65, 0x5c, 0xd8, 0x8e, 0xe7, 0x5b, 0x1d, 0x75, 0x09,
	0xe9, 0xf0, 0x65, 0xc7, 0xb1, 0x7d, 0xd7, 0xe9, 0x12, 0x13, 0xfb, 0xb8, 0xe3, 0x5b, 0x8e, 0x4d,
	0x7c, 0xab, 0x87, 0x09, 0xfe, 0xad, 0x6f, 0xb9, 0xd8, 0x54, 0x2b, 0x48, 0x83, 0x6d, 0xdc, 0xb9,
	0x74, 0xc8, 0xf9, 0x95, 0x5d, 0xe0, 0xe7, 0x86, 0xd5, 0xc5, 0xa6, 0x5a, 0xcd, 0xd5, 0x36, 0xb6,
	0x2e, 0x2e, 0xdf, 0x3a, 0x2e, 0xf1, 0xac, 0x0b, 0xdb, 0xe8, 0x62, 0x93, 0x78, 0xd8, 0xf3, 0x72,
	0x96, 0x70, 0xb6, 0x8c, 0xda, 0xb0, 0x7b, 0xee, 0xb8, 0xd7, 0x86, 0x6b, 0x5a, 0xf6, 0x05, 0xe9,
	0x77, 0x0d, 0x1b, 0x13, 0x17, 0x7b, 0xd8, 0x57, 0x15, 0xb4, 0x01, 0x8d, 0xbe, 0xe1, 0x5f, 0x16,
	0xd4, 0x5a, 0x4e, 0xed, 0x38, 0x76, 0xc7, 0xf0, 0xb1, 0x6d, 0xf8, 0xd8, 0x24, 0x13, 0xac, 0x8e,
	0xfe, 0x07, 0x3b, 0xe2, 0xea, 0x96, 0xe7, 0xbb, 0x86, 0x6f, 0xbd, 0xc3, 0xdd, 0x9b, 0x02, 0x5a,
	0xc9, 0x5d, 0xb8, 0xf8, 0x1d, 0x76, 0x3d, 0x4c, 0x16, 0xc8, 0x57, 0x0f, 0xff, 0xac, 0x00, 0x9a,
	0xff, 0xb5, 0xf3, 0xb1, 0xd9, 0x8e, 0x8d, 0xd5, 0x25, 0xb4, 0x05, 0x9b, 0x9e, 0xd5, 0xeb, 0x77,
	0x31, 0xe9, 0x1b, 0x9e, 0x77, 0xed, 0xb8, 0xf9, 0xcd, 0x37, 0xa0, 0xf1, 0x2b, 0xbe, 0xc1, 0x26,
	0xe9, 0x99, 0xaf, 0xd5, 0x6a, 0x3e, 0x88, 0x1e, 0xf6, 0xad, 0xce, 0x55, 0xd7, 0xb9, 0xf2, 0xc8,
	0x04, 0x59, 0xce, 0x7f, 0x98, 0x62, 0xeb, 0x5d, 0x1a, 0xdf, 0xa9, 0x4a, 0xee, 0x76, 0x8e, 0x29,
	0xa0, 0xda, 0xe9, 0x3f, 0x0a, 0xd4, 0xdf, 0xbe, 0x0f, 0x8d, 0x84, 0xa1, 0x53, 0xa8, 0x89, 0x48,
	0x41, 0xf2, 0xd9, 0x94, 0xe2, 0xa5, 0xbd, 0x7b, 0x54, 0x84, 0xd1, 0xd1, 0x28, 0x8c, 0x8e, 0x70,
	0x1e, 0x46, 0xe8, 0x04, 0x94, 0x3c, 0x48, 0x90, 0x2a, 0x25, 0xe3, 0x4c, 0x59, 0xa8, 0xf8, 0x1e,
	0x56, 0x64, 0x74, 0x20, 0xf9, 0xd7, 0x99, 0x4a, 0x9e, 0xf6, 0xf6, 0x74, 0x51, 0x7e, 0x14, 0xcf,
	0x00, 0x26, 0x49, 0x82, 0x76, 0x05, 0x67, 0x2e, 0x5a, 0x16, 0x9e, 0x79, 0x06, 0x30, 0xc9, 0x0f,
	0xa9, 0x9e, 0x0b, 0x94, 0x85, 0xea, 0x1f, 0x61, 0x75, 0x94, 0x20, 0xa8, 0x70, 0x37, 0x93, 0x31,
	0xed, 0x9d, 0x99, 0x6a, 0x61, 0xfa, 0xa4, 0x82, 0xde, 0xc0, 0x7a, 0x39, 0x35, 0x90, 0x26, 0x88,
	0x4f, 0x04, 0x49, 0x7b, 0x77, 0xe6, 0xfb, 0x3d, 0xba, 0xf8, 0x1b, 0x58, 0x2b, 0x85, 0x09, 0x2a,
	0x3e, 0x14, 0xf3, 0xf1, 0xb2, 0x48, 0x7f, 0x52, 0x41, 0xbf, 0xc0, 0x5a, 0x29, 0x01, 0x64, 0x87,
	0xf9, 0x4c, 0xf8, 0xdc, 0xf0, 0x26, 0xb9, 0x20, 0x87, 0x37, 0x17, 0x14, 0x8b, 0xd4, 0xb7, 0x75,
	0xb1, 0x7f, 0xf5, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xf0, 0xe7, 0x40, 0x7d, 0xdd, 0x08, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BfdApiClient is the client API for BfdApi service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BfdApiClient interface {
	// Manage the overall server state
	Start(ctx context.Context, in *StartRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	Stop(ctx context.Context, in *StopRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Manage the peers of the bfd server
	AddPeer(ctx context.Context, in *AddPeerRequest, opts ...grpc.CallOption) (*AddPeerResponse, error)
	UpdatePeer(ctx context.Context, in *UpdatePeerRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	DeletePeer(ctx context.Context, in *DeletePeerRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	ListPeer(ctx context.Context, in *ListPeerRequest, opts ...grpc.CallOption) (BfdApi_ListPeerClient, error)
	// Manage the state of the peers of the bfd server
	GetPeerState(ctx context.Context, in *GetPeerStateRequest, opts ...grpc.CallOption) (*PeerStateResponse, error)
	MonitorPeer(ctx context.Context, in *MonitorPeerRequest, opts ...grpc.CallOption) (BfdApi_MonitorPeerClient, error)
	DisablePeer(ctx context.Context, in *DisablePeerRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	EnablePeer(ctx context.Context, in *EnablePeerRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type bfdApiClient struct {
	cc *grpc.ClientConn
}

func NewBfdApiClient(cc *grpc.ClientConn) BfdApiClient {
	return &bfdApiClient{cc}
}

func (c *bfdApiClient) Start(ctx context.Context, in *StartRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.BfdApi/Start", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bfdApiClient) Stop(ctx context.Context, in *StopRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.BfdApi/Stop", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bfdApiClient) AddPeer(ctx context.Context, in *AddPeerRequest, opts ...grpc.CallOption) (*AddPeerResponse, error) {
	out := new(AddPeerResponse)
	err := c.cc.Invoke(ctx, "/api.BfdApi/AddPeer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bfdApiClient) UpdatePeer(ctx context.Context, in *UpdatePeerRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.BfdApi/UpdatePeer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bfdApiClient) DeletePeer(ctx context.Context, in *DeletePeerRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.BfdApi/DeletePeer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bfdApiClient) ListPeer(ctx context.Context, in *ListPeerRequest, opts ...grpc.CallOption) (BfdApi_ListPeerClient, error) {
	stream, err := c.cc.NewStream(ctx, &_BfdApi_serviceDesc.Streams[0], "/api.BfdApi/ListPeer", opts...)
	if err != nil {
		return nil, err
	}
	x := &bfdApiListPeerClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type BfdApi_ListPeerClient interface {
	Recv() (*ListPeerResponse, error)
	grpc.ClientStream
}

type bfdApiListPeerClient struct {
	grpc.ClientStream
}

func (x *bfdApiListPeerClient) Recv() (*ListPeerResponse, error) {
	m := new(ListPeerResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *bfdApiClient) GetPeerState(ctx context.Context, in *GetPeerStateRequest, opts ...grpc.CallOption) (*PeerStateResponse, error) {
	out := new(PeerStateResponse)
	err := c.cc.Invoke(ctx, "/api.BfdApi/GetPeerState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bfdApiClient) MonitorPeer(ctx context.Context, in *MonitorPeerRequest, opts ...grpc.CallOption) (BfdApi_MonitorPeerClient, error) {
	stream, err := c.cc.NewStream(ctx, &_BfdApi_serviceDesc.Streams[1], "/api.BfdApi/MonitorPeer", opts...)
	if err != nil {
		return nil, err
	}
	x := &bfdApiMonitorPeerClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type BfdApi_MonitorPeerClient interface {
	Recv() (*PeerStateResponse, error)
	grpc.ClientStream
}

type bfdApiMonitorPeerClient struct {
	grpc.ClientStream
}

func (x *bfdApiMonitorPeerClient) Recv() (*PeerStateResponse, error) {
	m := new(PeerStateResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *bfdApiClient) DisablePeer(ctx context.Context, in *DisablePeerRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.BfdApi/DisablePeer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bfdApiClient) EnablePeer(ctx context.Context, in *EnablePeerRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.BfdApi/EnablePeer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BfdApiServer is the server API for BfdApi service.
type BfdApiServer interface {
	// Manage the overall server state
	Start(context.Context, *StartRequest) (*empty.Empty, error)
	Stop(context.Context, *StopRequest) (*empty.Empty, error)
	// Manage the peers of the bfd server
	AddPeer(context.Context, *AddPeerRequest) (*AddPeerResponse, error)
	UpdatePeer(context.Context, *UpdatePeerRequest) (*empty.Empty, error)
	DeletePeer(context.Context, *DeletePeerRequest) (*empty.Empty, error)
	ListPeer(*ListPeerRequest, BfdApi_ListPeerServer) error
	// Manage the state of the peers of the bfd server
	GetPeerState(context.Context, *GetPeerStateRequest) (*PeerStateResponse, error)
	MonitorPeer(*MonitorPeerRequest, BfdApi_MonitorPeerServer) error
	DisablePeer(context.Context, *DisablePeerRequest) (*empty.Empty, error)
	EnablePeer(context.Context, *EnablePeerRequest) (*empty.Empty, error)
}

func RegisterBfdApiServer(s *grpc.Server, srv BfdApiServer) {
	s.RegisterService(&_BfdApi_serviceDesc, srv)
}

func _BfdApi_Start_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BfdApiServer).Start(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BfdApi/Start",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BfdApiServer).Start(ctx, req.(*StartRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BfdApi_Stop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StopRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BfdApiServer).Stop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BfdApi/Stop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BfdApiServer).Stop(ctx, req.(*StopRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BfdApi_AddPeer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddPeerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BfdApiServer).AddPeer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BfdApi/AddPeer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BfdApiServer).AddPeer(ctx, req.(*AddPeerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BfdApi_UpdatePeer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePeerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BfdApiServer).UpdatePeer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BfdApi/UpdatePeer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BfdApiServer).UpdatePeer(ctx, req.(*UpdatePeerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BfdApi_DeletePeer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePeerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BfdApiServer).DeletePeer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BfdApi/DeletePeer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BfdApiServer).DeletePeer(ctx, req.(*DeletePeerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BfdApi_ListPeer_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListPeerRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(BfdApiServer).ListPeer(m, &bfdApiListPeerServer{stream})
}

type BfdApi_ListPeerServer interface {
	Send(*ListPeerResponse) error
	grpc.ServerStream
}

type bfdApiListPeerServer struct {
	grpc.ServerStream
}

func (x *bfdApiListPeerServer) Send(m *ListPeerResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _BfdApi_GetPeerState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPeerStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BfdApiServer).GetPeerState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BfdApi/GetPeerState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BfdApiServer).GetPeerState(ctx, req.(*GetPeerStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BfdApi_MonitorPeer_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(MonitorPeerRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(BfdApiServer).MonitorPeer(m, &bfdApiMonitorPeerServer{stream})
}

type BfdApi_MonitorPeerServer interface {
	Send(*PeerStateResponse) error
	grpc.ServerStream
}

type bfdApiMonitorPeerServer struct {
	grpc.ServerStream
}

func (x *bfdApiMonitorPeerServer) Send(m *PeerStateResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _BfdApi_DisablePeer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DisablePeerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BfdApiServer).DisablePeer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BfdApi/DisablePeer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BfdApiServer).DisablePeer(ctx, req.(*DisablePeerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BfdApi_EnablePeer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EnablePeerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BfdApiServer).EnablePeer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BfdApi/EnablePeer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BfdApiServer).EnablePeer(ctx, req.(*EnablePeerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BfdApi_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.BfdApi",
	HandlerType: (*BfdApiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Start",
			Handler:    _BfdApi_Start_Handler,
		},
		{
			MethodName: "Stop",
			Handler:    _BfdApi_Stop_Handler,
		},
		{
			MethodName: "AddPeer",
			Handler:    _BfdApi_AddPeer_Handler,
		},
		{
			MethodName: "UpdatePeer",
			Handler:    _BfdApi_UpdatePeer_Handler,
		},
		{
			MethodName: "DeletePeer",
			Handler:    _BfdApi_DeletePeer_Handler,
		},
		{
			MethodName: "GetPeerState",
			Handler:    _BfdApi_GetPeerState_Handler,
		},
		{
			MethodName: "DisablePeer",
			Handler:    _BfdApi_DisablePeer_Handler,
		},
		{
			MethodName: "EnablePeer",
			Handler:    _BfdApi_EnablePeer_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListPeer",
			Handler:       _BfdApi_ListPeer_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "MonitorPeer",
			Handler:       _BfdApi_MonitorPeer_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "api.proto",
}
